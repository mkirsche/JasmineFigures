library(dplyr)
library(ggplot2)
library(tidyr)
library(stringr)
library(reshape2)
library(gridExtra)
library(rlist)
library(VennDiagram)
library(Cairo)

suppvec_hist <- function(df, caller, outfile) {
  df$SUPP_VEC_STRING = str_pad(as.character(df$SUPP_VEC), 3, "left", "0")
  suppveccounts <- df %>% count(SUPP_VEC_STRING)
  suppveccounts$TYPE = "INS"
  ggplot(df, aes(x = SUPP_VEC_STRING, y = 1, fill = TYPE)) +
    geom_bar(position = "stack", stat = "identity") +
    labs(title = paste("SVs by Support Vector (", caller, ")")) +
    xlab("Support Vector") +
    ylab("Count") +
    theme(plot.title = element_text(size = 18, hjust = 0.5),
          axis.text.x = element_text(size = 12),
          axis.text.y = element_text(size = 12),
          axis.title.x = element_text(size = 16),
          axis.title.y = element_text(size = 16),
          legend.text = element_text(size = 12),
          legend.title = element_text(size = 16),
    ) +
    scale_fill_discrete(name = "Type") +
    geom_text(data = suppveccounts, aes(x = SUPP_VEC_STRING, y=n, label=n), position=position_dodge(width=0.9), vjust=-0.75)
  
  ggsave(outfile, width= 6, height = 8)
}

plot_table <- function(fn, outdir, prefix, caller, discvec){
  
  df <- read.table(fn, sep = "\t", header = TRUE)
  
  ggplot(df %>% count(TYPE), aes(x = reorder(TYPE, -n), y = n)) +
    geom_bar(stat = "identity", fill = "lightblue2") +
    labs(title = paste("SVs by Type (", caller, ")")) +
    xlab("Type") +
    ylab("Count") +
    theme(plot.title = element_text(size = 18, hjust = 0.5),
          axis.text.x = element_text(size = 12),
          axis.text.y = element_text(size = 12),
          axis.title.x = element_text(size = 16),
          axis.title.y = element_text(size = 16),
          legend.text = element_text(size = 12),
          legend.title = element_text(size = 16),
    ) +
    geom_text(aes(x = TYPE, y=n, label=n), position=position_dodge(width=0.9), vjust=-0.75)
  
  outfile <- paste(outdir, prefix, "_typehist_", caller, ".png", sep="")
  ggsave(outfile, width= 6, height = 8)
  
  suppvec_hist(df, caller, paste(outdir, prefix, "_suppvechist_", caller, ".png", sep=""))
  suppvec_hist(df %>% filter(SPECIFIC_FLAG == 1), paste(caller, "Specific"), paste(outdir, prefix, "_specificsuppvechist_", caller, ".png", sep=""))
  suppvec_hist(df %>% filter(SPECIFIC_FLAG == 1 & PRECISE_FLAG == 1), paste(caller, "Precise+Specific"), paste(outdir, prefix, "_precisespecificsuppvechist_", caller, ".png", sep=""))
  
  
  df$startspan = df$MAX_START - df$MIN_START
  df$endspan = df$MAX_END - df$MIN_END
  
  multi <- df %>% filter(NUMVARS > 1)
  
  allspans = c(multi$startspan, multi$endspan)
  allspans = round(log(allspans + 1, base = 2))
  ggplot() + aes(allspans) + geom_histogram(binwidth = 1, fill = "lightblue2", color = "darkblue") + 
    xlab(expression(Breakpoint~range:~log[2](max~-~min~+~1))) + ylab("Number of merged breakpoints") +
    labs(title = paste("Breakpoint Spans (", caller, ")")) +
    theme(plot.title = element_text(size = 18, hjust = 0.5),
          axis.text.x = element_text(size = 12),
          axis.text.y = element_text(size = 12),
          axis.title.x = element_text(size = 16),
          axis.title.y = element_text(size = 16),
    ) +     stat_bin(binwidth=1, geom="text", aes(label=..count..), vjust=-1) 
  
  outfile <- paste(outdir, prefix, "_breakpointspanhist_", caller, ".png", sep="")
  ggsave(outfile, width= 8, height = 8)
  
  filtered = df %>% filter(SPECIFIC_FLAG == 1 & PRECISE_FLAG == 1 & SUPP_VEC == discvec)
  filtered$caller <- caller
  
  totalcount <- sum(df$NUMVARS)
  mergedcount <- nrow(df)
  return (list(filtered, totalcount, mergedcount))
}

plot_all_callers <- function(outdir, prefix, discvec){
  
  jasmineresults <- plot_table(paste(outdir, prefix, ".jasmine_augmented.txt", sep = ""), outdir, prefix, "Jasmine", discvec)

  discordant <- data.frame()
  discordant <- rbind(discordant, jasmineresults[[1]])
  
  errors <- read.table(paste(outdir, prefix, ".errors.txt", sep = ""), sep="\t", header = TRUE)
  errors$caller <- errors$SOFTWARE
  errors$caller <- ifelse(errors$caller == "survivor", "Survivor", as.character(errors$caller))
  errors$caller <- ifelse(errors$caller == "jasmine", "Jasmine", as.character(errors$caller))
  errors$caller <- ifelse(errors$caller == "jasmineintra", "Jasmine_Intrasample", as.character(errors$caller))
  errors$totaldisc <- errors$DISC_MIXED_STRAND_AND_TYPE + errors$DISC_MIXED_STRAND_ONLY + errors$DISC_MIXED_TYPE_ONLY
  errors$mixedtype <- errors$DISC_MIXED_STRAND_AND_TYPE + errors$DISC_MIXED_TYPE_ONLY
  errors$mixedstrand <- errors$DISC_MIXED_STRAND_ONLY
  
  #totals <- c(jasmineresults[[2]], survivorresults[[2]], svtoolsresults[[2]], svimmerresults[[2]], jasmineintraresults[[2]],
  #            jasmineresults[[3]], survivorresults[[3]], svtoolsresults[[3]], svimmerresults[[3]], jasmineintraresults[[3]])
  
  disccounts <- discordant %>% group_by(caller) %>% summarise(counts=n(), sums=sum(NUMVARS))
  disccounts
  
  disccounts <- inner_join(disccounts, errors, by = "caller")
  mdfr <- melt(disccounts, id.vars = "caller")
  
  ggplot(disccounts, aes(x = caller, y = counts, fill = caller)) +
    geom_bar(position = "stack", stat = "identity") +
    labs(title = paste("Discordant Variants (", prefix, ")")) +
    xlab("Merging Software") +
    ylab("Discordant Count") +
    theme(plot.title = element_text(size = 18, hjust = 0.5),
          axis.text.x = element_text(size = 12),
          axis.text.y = element_text(size = 12),
          axis.title.x = element_text(size = 16),
          axis.title.y = element_text(size = 16),
    ) + theme(legend.position = "none")
  outfile <- paste(outdir, prefix, "_discordant.png", sep="")
  ggsave(outfile, width= 8, height = 8)
  
  ggplot(mdfr %>% filter(variable == "counts" | variable == "mixedtype" | variable == "mixedstrand"), aes(x = caller, y = as.numeric(value), fill = variable)) +
    geom_bar(stat = "identity") +
    labs(title = paste("Discordant and Invalid Variants in Child (", prefix, ")")) +
    xlab("Merging Software") +
    ylab("Count") +
    theme(plot.title = element_text(size = 18, hjust = 0.5),
          axis.text.x = element_text(size = 12),
          axis.text.y = element_text(size = 12),
          axis.title.x = element_text(size = 16),
          axis.title.y = element_text(size = 16),
    ) +
    scale_fill_brewer(name = "Type", labels = c("Discordant", "Mixed Type", "Mixed Strand"), palette = "Set2")
  outfile <- paste(outdir, prefix, "_discordant_errors.png", sep="")
  ggsave(outfile, width= 8, height = 8)
}

outdir = "/home/mkirsche/mendelian/md/ash_pb/"
